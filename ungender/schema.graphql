scalar Time

type AuthToken {
  accessToken: String!
  expiredAt: Time!
}

type AuthResponse {
  authToken: AuthToken!
  user: User!
}

input Login {
  userid: String!
  password: String!
}

input Signup {
  userid: String!
  fname: String!
  lname: String!
  password: String!
}

input GetCar {
  carid: ID!
  userid: String!
}

type User {
  userid: String!
  fname: String
  lname: String
  password: String!
  carid: String
}

type Garage {
  carid: String!
  DateOfManufac: String
  LastServiceDate: String
  UniqueID: String
  LastUsedDate: String
  Available: Boolean
}

type Query {
  getAll: [Garage!]!
}

type Mutation {
  register(input: Signup!): AuthResponse!
  signin(input: Login!): AuthResponse!
  signout(input: Login!): String!
  getcar(input: GetCar!): User!
  returncar(input: GetCar!): User!
}
